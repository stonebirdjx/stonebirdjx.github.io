<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>编译原理 on 石鸟路遇</title>
    <link>https://stonebirdjx.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in 编译原理 on 石鸟路遇</description>
    <image>
      <url>https://stonebirdjx.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://stonebirdjx.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 13 Nov 2022 23:01:26 +0800</lastBuildDate><atom:link href="https://stonebirdjx.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang编译原理</title>
      <link>https://stonebirdjx.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 13 Nov 2022 23:01:26 +0800</pubDate>
      
      <guid>https://stonebirdjx.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</guid>
      <description>go build 过程 go build 参数说明
-a	将命令源码文件与库源码文件全部重新构建，即使是最新的 -n	把编译期间涉及的命令全部打印出来，但不会真的执行，非常方便我们学习 -race	开启竞态条件的检测，支持的平台有限制 -x	打印编译期间用到的命名，它与 -n 的区别是，它不仅打印还会执行 go build -n main.go
E:\SomeFile\gospace\helloworld&amp;gt;go build -n main.go ... &amp;#34;C:\\Program Files\\Go\\pkg\\tool\\windows_amd64\\compile.exe&amp;#34; -o &amp;#34;$WORK\\b001\\_pkg_.a&amp;#34; -trimpath &amp;#34;$WORK\\b001=&amp;gt;&amp;#34; -p main -complete -buildid v3BL3MHm16Q3kjspXXCg/v3BL3MHm16Q3kjspXXCg -goversion go1.18.2 -c=4 -nolocalimports -importcfg &amp;#34;$WORK\\b001\\importcfg&amp;#34; -pack ... &amp;#34;C:\\Program Files\\Go\\pkg\\tool\\windows_amd64\\buildid.exe&amp;#34; -w &amp;#34;$WORK\\b001\\_pkg_.a&amp;#34; # internal ... &amp;#34;C:\\Program Files\\Go\\pkg\\tool\\windows_amd64\\link.exe&amp;#34; -o &amp;#34;$WORK\\b001\\exe\\a.out.exe&amp;#34; -importcfg &amp;#34;$WORK\\b001\\importcfg.link&amp;#34; -buildmode=pie -buildid=qEvHouU39HqKxAChmahv/v3BL 3MHm16Q3kjspXXCg/v3BL3MHm16Q3kjspXXCg/qEvHouU39HqKxAChmahv -extld=gcc &amp;#34;$WORK\\b001\\_pkg_.a&amp;#34; 这一部分是编译的核心，通过 compile、 buildid、 link 三个命令会编译出可执行文件 a.out。
然后通过 mv 更换成最终名字</description>
    </item>
    
  </channel>
</rss>
